# Docker Compose con Cloudflare Tunnel - CORREGIDO PARA N8N WORKERS
services:
  # -----------------------------------------------
  # SERVICIO 2: TRAEFIK (Reverse Proxy Local)
  # -----------------------------------------------
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "8088:80"
      - "8081:8080" # Dashboard de Traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - clinicos_pro_net

  # -----------------------------------------------
  # SERVICIO 3: PORTAINER (Gestor Visual de Docker)
  # -----------------------------------------------
  portainer:
    image: "portainer/portainer-ce:latest"
    container_name: "portainer"
    restart: unless-stopped
    ports:
      - "9443:9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainer_data:/data"
    networks:
      - clinicos_pro_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.localhost`)"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  # -----------------------------------------------
  # SERVICIO 4: POSTGRES (Base de Datos Central)
  # -----------------------------------------------
  postgres:
    image: postgres:13
    container_name: "postgres_db"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
      - "./postgres-init:/docker-entrypoint-initdb.d"
    networks:
      - clinicos_pro_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # -----------------------------------------------
  # SERVICIO 5: REDIS (Caché y Cola)
  # -----------------------------------------------
  redis:
    image: "redis:alpine"
    container_name: "redis"
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      - clinicos_pro_net
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # -----------------------------------------------
  # SERVICIO 6A: N8N MAIN (Interfaz Web + Webhooks)
  # -----------------------------------------------
  n8n:
    image: n8nio/n8n:latest
    container_name: "n8n_main"
    restart: unless-stopped
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres_db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n_db
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - GENERIC_TIMEZONE=America/Lima
      # ✅ CONFIGURACIÓN CORREGIDA PARA QUEUE
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
      - QUEUE_HEALTH_CHECK_ACTIVE=true
      # ✅ CONFIGURACIÓN WEB
      - N8N_SECURE_COOKIE=false
      - N8N_PROTOCOL=https
      - N8N_HOST=n8n.automacore.shop
      - WEBHOOK_URL=https://n8n.automacore.shop/
      # ✅ CONFIGURACIÓN DE WORKERS
      - N8N_WORKERS_COUNT=2
    volumes:
      - "n8n_data:/home/node/.n8n"
    ports:
      - "5678:5678"
    networks:
      - clinicos_pro_net
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.localhost`)"
      - "traefik.http.routers.n8n.entrypoints=web"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  # -----------------------------------------------
  # SERVICIO 6B: N8N WORKER 1 (Procesador de Cola)
  # -----------------------------------------------
  n8n_worker_1:
    image: n8nio/n8n:latest
    container_name: "n8n_worker_1"
    restart: unless-stopped
    command: ["n8n", "worker"]
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres_db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n_db
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - GENERIC_TIMEZONE=America/Lima
      # ✅ CONFIGURACIÓN DE WORKER
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
      - QUEUE_HEALTH_CHECK_ACTIVE=true
      # ✅ CONFIGURACIÓN BÁSICA
      - N8N_PROTOCOL=https
      - N8N_HOST=n8n.automacore.shop
      - WEBHOOK_URL=https://n8n.automacore.shop/
    volumes:
      - "n8n_data:/home/node/.n8n"
    networks:
      - clinicos_pro_net
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # -----------------------------------------------
  # SERVICIO 6C: N8N WORKER 2 (Procesador de Cola)
  # -----------------------------------------------
  n8n_worker_2:
    image: n8nio/n8n:latest
    container_name: "n8n_worker_2"
    restart: unless-stopped
    command: ["n8n", "worker"]
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres_db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n_db
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - GENERIC_TIMEZONE=America/Lima
      # ✅ CONFIGURACIÓN DE WORKER
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
      - QUEUE_HEALTH_CHECK_ACTIVE=true
      # ✅ CONFIGURACIÓN BÁSICA
      - N8N_PROTOCOL=https
      - N8N_HOST=n8n.automacore.shop
      - WEBHOOK_URL=https://n8n.automacore.shop/
    volumes:
      - "n8n_data:/home/node/.n8n"
    networks:
      - clinicos_pro_net
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
